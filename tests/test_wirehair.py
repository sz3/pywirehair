from base64 import b64encode, b64decode
from os import urandom
from unittest import TestCase

from pywirehair import encoder, decoder

SAMPLES_A = [
    b'MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5',
    b'MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OQ==',
    b'0BAd3QfHygoz89AQHd0Hx8oKM/PQEB3dB8fKCjPz0BAd3QfHygoz80YO1p4rY7vznNRGDtaeK2O785zU',
]

SAMPLES_B = [
    b'MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5',  # noqa
    b'MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OQ==',  # noqa
    b'0BAd3QfHygoz89AQHd0Hx8oKM/PQEB3dB8fKCjPz0BAd3QfHygoz89AQHd0Hx8oKM/PQEB3dB8fKCjPz0BAd3QfHygoz89AQHd0Hx8oKM/PQEB3dB8fKCjPz0BAd3QfHygoz89AQHd0Hx8oKM/PQEB3dB8fKCjPz0BAd3QfHygoz89AQHd0Hx8oKM/PQEB3dB8fKCjPz0BAd3QfHygoz89AQHd0Hx8oKM/PQEB3dB8fKCjPz0BAd3QfHygoz89AQHd0Hx8oKM/PQEB3dB8fKCjPz0BAd3QfHygoz89AQHd0Hx8oKM/PQEB3dB8fKCjPz0BAd3QfHygoz89AQHd0Hx8oKM/PQEB3dB8fKCjPz0BAd3QfHygoz89AQHd0Hx8oKM/PQEB3dB8fKCjPz0BAd3QfHygoz89AQHd0Hx8oKM/PQEB3dB8fKCjPz0BAd3QfHygoz89AQHd0Hx8oKM/PQEB3dB8fKCjPz0BAd3QfHygoz89AQHd0Hx8oKM/PQEB3dB8fKCjPz0BAd3QfHygoz80YO1p4rY7vznNRGDtaeK2O785zURg7Wnitju/Oc1EYO1p4rY7vznNRGDtaeK2O785zURg7Wnitju/Oc1EYO1p4rY7vznNRGDtaeK2O785zURg7Wnitju/Oc1EYO1p4rY7vznNRGDtaeK2O785zURg7Wnitju/Oc1EYO1p4rY7vznNRGDtaeK2O785zURg7Wnitju/Oc1EYO1p4rY7vznNRGDtaeK2O785zURg7Wnitju/Oc1EYO1p4rY7vznNRGDtaeK2O785zU',  # noqa
]


class WirehairTest(TestCase):
    def test_encode(self):
        data = b'0123456789' * 10
        enc = encoder(data, 60)

        self.assertTrue(True)

